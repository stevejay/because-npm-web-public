version: 2

aliases:
  - &working_directory ~/project
  - &node_docker_image
    - image: circleci/node:10.15-browsers
      environment:
        TERM: xterm
  - &restore_npm_cache
    restore_cache:
      keys:
        - v2-npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - v2-npm-{{ .Branch }}
        - v2-npm-
  - &save_npm_cache
    save_cache:
      key: v2-npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
      paths:
        - node_modules
  - &npm_install
    run:
      name: npm install
      command: npm install
  - &npm_build
    run:
      name: npm run build
      command: |
        export REACT_APP_BUILD_ID="${CIRCLE_SHA1:0:7}"
        npm run build

jobs:
  unit_test_and_build:
    working_directory: *working_directory
    docker: *node_docker_image
    steps:
      - checkout
      - *restore_npm_cache
      - *npm_install
      - *save_npm_cache
      - run: npm run check-fences
      - run: npm run test:ci
      - *npm_build
      - persist_to_workspace:
          root: *working_directory
          paths:
            - build
      - store_test_results:
          path: ./reports
  build_release:
    working_directory: *working_directory
    docker: *node_docker_image
    steps:
      - checkout
      - *restore_npm_cache
      - *npm_install
      - *save_npm_cache
      - *npm_build
      - run:
          name: rename build dir to build-release
          command: mv build build-release
      - persist_to_workspace:
          root: *working_directory
          paths:
            - build-release
  # e2e_testing:
  #   working_directory: *working_directory
  #   docker: *cypress_docker_image
  #   parallelism: 1
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: *working_directory
  #     # caching of node_modules has no effect in this job
  #     # as it uses a different docker image to the other jobs.
  #     - *npm_install
  #     - run:
  #         command: yarn run serve:build
  #         background: true
  #     - run:
  #         name: cypress run
  #         command: $(yarn bin)/cypress run --reporter junit --reporter-options "mochaFile=reports/cypress/results.xml"
  #         when: on_success
  #     - store_artifacts:
  #         path: cypress/videos
  #     - store_artifacts:
  #         path: cypress/screenshots
  #     - store_test_results:
  #         path: ./reports
  # deploy_to_staging:
  #   working_directory: *working_directory
  #   docker: *node_docker_image
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: *working_directory
  #     - *restore_npm_cache
  #     - *npm_install
  #     - *save_npm_cache
  #     - run:
  #         name: Deploy master to staging
  #         command: ./node_modules/.bin/firebase deploy --project artfullylondon-staging-admin --token=$FIREBASE_DEPLOY_TOKEN --non-interactive
  # deploy_to_prod:
  #   working_directory: *working_directory
  #   docker: *node_docker_image
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: *working_directory
  #     - *restore_npm_cache
  #     - *npm_install
  #     - *save_npm_cache
  #     - run:
  #         name: Deploy master to prod
  #         command: ./node_modules/.bin/firebase deploy --public=./build-release --project artfullylondon-prod-admin --token=$FIREBASE_DEPLOY_TOKEN --non-interactive
  visual_regression_testing:
    working_directory: *working_directory
    docker: *node_docker_image
    steps:
      - checkout
      - *restore_npm_cache
      - *npm_install
      - *save_npm_cache
      - run: npm run snapshot

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - unit_test_and_build:
          context: because-npm-staging
      - visual_regression_testing:
          context: because-npm-staging
      # - e2e_testing:
      #     context: because-npm-staging
      #     requires:
      #       - unit_test_and_build
      # - deploy_to_staging:
      #     context: because-npm-staging
      #     requires:
      #       - unit_test_and_build
      #       - e2e_testing
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - build_release:
      #     context: because-npm-staging # TODO artfully-prod
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - hold:
      #     type: approval
      #     requires:
      #       - deploy_to_staging
      #       - build_release
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - deploy_to_prod:
      #     context: because-npm-staging # TODO artfully-prod
      #     requires:
      #       - hold
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - tag_release:
      #     requires:
      #       - deploy_to_prod
      #     filters:
      #       branches:
      #         only:
      #           - master
